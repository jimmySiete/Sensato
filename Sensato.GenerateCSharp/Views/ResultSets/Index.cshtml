@model IEnumerable<Sensato.GenerateCSharp.Models.Tb_ResultSets>

@{
    ViewBag.Title = "Index";
}

<h2 style="color:seagreen;">"@ViewBag.ObjName"</h2>
<h3>Colección de Datos</h3>
<table class="table table-bordered table-condensed">
    <tr style="background-color:olivedrab; color:white;">
        <th>
            @Html.DisplayName(Sensato.GenerateCSharp.GlobalCode.Resources.ResultSetName)
        </th>
        <th>Acciones</th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ResultSetName)
            </td>
            <td>
                @Html.ActionLink(Sensato.GenerateCSharp.GlobalCode.Resources.Edit, "Edit", new { id = item.ID_ResultSet })
            </td>
        </tr>
    }

</table>
<div>
    <button type="button" class="btn-link" onclick="GoToObjects(@ViewBag.idContext, @ViewBag.idProject)">@Sensato.GenerateCSharp.GlobalCode.Resources.BackToListO</button>
    <hr />
    <button type="button" class="btn-link" onclick="GoToContext(@ViewBag.idProject)">@Sensato.GenerateCSharp.GlobalCode.Resources.BackToListC</button>
</div>

@section scripts
    {
    <script type="text/javascript">
        $(document).ready(function () {
        });

        function GoToObjects(idContext, idProject) {
            window.location.href = "@Url.Action("Index", "Object")?idContext=" + idContext + "&idProject=" + idProject;
        }

        function GoToContext(idProject) {
            window.location.href = "@Url.Action("Index", "Context")?ID_Project=" + idProject;
        }

    </script>
}
