@model Sensato.GenerateCSharp.Models.Tb_Projects

@{
    ViewBag.Title = "Create";
}

<h2>Crear Nuevo Proyecto</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.Label(Sensato.GenerateCSharp.GlobalCode.Resources.ProjectName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProjectName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProjectName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label(Sensato.GenerateCSharp.GlobalCode.Resources.FileDirectory, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FileDirectory, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FileDirectory, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label(Sensato.GenerateCSharp.GlobalCode.Resources.LocalConnection, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="checkbox" name="LocalConnection" value="false" onchange="ChangeStatus(this)"/>
            @Html.ValidationMessageFor(model => model.LocalConnection, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label(Sensato.GenerateCSharp.GlobalCode.Resources.Server, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Server, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Server, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label(Sensato.GenerateCSharp.GlobalCode.Resources.ProjectUser, htmlAttributes: new { @class = "control-label col-md-2 disabled" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProjectUser, new { htmlAttributes = new { @class = "form-control disabled" } })
            @Html.ValidationMessageFor(model => model.ProjectUser, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label(Sensato.GenerateCSharp.GlobalCode.Resources.ProjectDatabase, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProjectDatabase, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProjectDatabase, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label(Sensato.GenerateCSharp.GlobalCode.Resources.Password, htmlAttributes: new { @class = "control-label col-md-2 disabled" })
        <div class="col-md-10">
            @Html.PasswordFor(model => model.Password, htmlAttributes: new { @class = "form-control disabled"})
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Crear" class="btn btn-success" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink(Sensato.GenerateCSharp.GlobalCode.Resources.BackToList, "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script type="text/javascript">
    $(document).ready(function () {

    });

    function ChangeStatus(item) {
        debugger;
        if ($(item).is(':checked')) {
            $(item).attr('value', "true");
            HideUserAndPass();
        } else {
            $(item).attr('value', "false");
            ShowUserAndPass();
        }
    }

    function HideUserAndPass() {
        debugger;
        $(".disabled").hide();
    }
    function ShowUserAndPass() {
        debugger;
        $(".disabled").show();
    }
</script>
}
