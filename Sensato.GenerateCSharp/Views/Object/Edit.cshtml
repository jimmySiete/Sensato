@model Sensato.GenerateCSharp.Models.Tb_Objects

@{
    ViewBag.Title = "Edit";
}


<h2>"@ViewBag.CxtName"</h2>
<h3>Editar</h3>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID_Object)
    @Html.HiddenFor(model => model.ID_Context, new { Value = ViewBag.idContext })

    @*<div class="form-group">
            @Html.LabelFor(model => model.ID_Context, "ID_Context", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ID_Context", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ID_Context, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.Label(Sensato.GenerateCSharp.GlobalCode.Resources.ObjectName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ObjectName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ObjectName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label(Sensato.GenerateCSharp.GlobalCode.Resources.ObjDescription, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ObjDescription, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ObjDescription, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label(Sensato.GenerateCSharp.GlobalCode.Resources.Entity, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Entity, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Entity, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Guardar" class="btn btn-warning" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink(Sensato.GenerateCSharp.GlobalCode.Resources.BackToListO, "Index", new { ViewBag.idContext })
    <hr />
    <button type="button" class="btn-link" onclick="GoToContexts(@ViewBag.id_project)">@Sensato.GenerateCSharp.GlobalCode.Resources.BackToListC</button>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function () {

        });

        function GoToContexts(idProject) {
            window.location.href = "@Url.Action("Index", "Context")?ID_Project=" + idProject;
        }
    </script>
}
