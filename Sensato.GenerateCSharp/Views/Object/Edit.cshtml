@model Sensato.GenerateCSharp.Models.Tb_Objects

@{
    ViewBag.Title = "Edit";
}


<h2>"@ViewBag.CxtName"</h2>
<h3>Editar</h3>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID_Object)
    @Html.HiddenFor(model => model.ID_Context, new { Value = ViewBag.idContext })
    <input type="hidden" id="ID_AuxObject" name="ID_AuxObject">

    <div class="form-group">
        @Html.Label("Buscar Procedimiento Almacenado", htmlAttributes: new { @class = "control-label col-md-4", @style = "align: center;" })
        <div id="the-basics" class="col-md-10">
            <input id="ddObject" class="form-control selector" type="text">
        </div>
    </div>

    <div class="form-group">
        @Html.Label(Sensato.GenerateCSharp.GlobalCode.Resources.ObjectName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ObjectName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ObjectName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label(Sensato.GenerateCSharp.GlobalCode.Resources.ObjDescription, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ObjDescription, "ObjDescription", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ObjDescription, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label(Sensato.GenerateCSharp.GlobalCode.Resources.Entity, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Entity, "Entity", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Entity, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Guardar" class="btn btn-warning" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink(Sensato.GenerateCSharp.GlobalCode.Resources.BackToListO, "Index", new { ViewBag.idContext, ViewBag.idProject })
    <hr />
    <button type="button" class="btn-link" onclick="GoToContexts(@ViewBag.idProject)">@Sensato.GenerateCSharp.GlobalCode.Resources.BackToListC</button>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
        $(document).ready(function () {
            $('#ddObject').change(function () {
                debugger;
                $('#ID_AuxObject').val($(this).val());
            });
        });

        function GoToContexts(idProject) {
            window.location.href = "@Url.Action("Index", "Context")?ID_Project=" + idProject;
        }

        IDStoredProcedure = $('.selector').selectize({
            maxItems: 1,
            valueField: 'Value',
            labelField: 'Text',
            searchField: 'Text',
            //options: [],
            create: false,
            highlight: true,
            load: function (query, callback) {
                if (!query.length) return callback();
                $.ajax({
                url: '@Url.Action("GetStoredProceduresFromSysObjects", "Object")' ,
                type: 'POST',
                dataType: 'json',
                data: {
                    txt: query,
                    idProject: '@ViewBag.idProject'
                },
                error: function (e) {
                    callback();
                },
                success: function (res) {
                    callback(res);
                    }
                });
            }
        });

</script>
}
